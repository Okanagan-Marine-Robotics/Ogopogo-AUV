import argparse
import cv2
import numpy as np

def load_rgb_from_path(path):
    # Load the RGB image from a .npy file
    rgb = np.load(path)
    if rgb is None:
        raise ValueError(f"Error loading RGB image from {path}")
    return rgb

def load_depth_from_path(path):
    # Load the Depth image from a .npy file
    depth = np.load(path)
    if depth is None:
        raise ValueError(f"Error loading Depth image from {path}")
    return depth

def main():
    # Set up the CLI argument parser
    parser = argparse.ArgumentParser(description="Load RGB and Depth images from .npy files and display using OpenCV.")
    parser.add_argument('rgb_path', type=str, help="The path to the RGB .npy file")
    parser.add_argument('depth_path', type=str, help="The path to the Depth .npy file")

    # Parse the command line arguments
    args = parser.parse_args()

    # Load the RGB and Depth images
    rgb = load_rgb_from_path(args.rgb_path)
    depth = load_depth_from_path(args.depth_path)

    # Convert RGB from [H, W, 3] to BGR (OpenCV uses BGR by default)
    bgr_rgb = cv2.cvtColor(rgb, cv2.COLOR_RGB2BGR)

    # Display the RGB image using OpenCV
    cv2.imshow("RGB Image", bgr_rgb)

    # Display the Depth image using OpenCV
    # Depth image is typically single-channel, so display in grayscale
    cv2.imshow("Depth Image", depth)

    # Wait for a key press to close the windows
    cv2.waitKey(0)  # Wait for any key to close the window
    cv2.destroyAllWindows()  # Close all OpenCV windows

if __name__ == "__main__":
    main()

